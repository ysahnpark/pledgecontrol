<?php namespace Altenia\Ecofy\CoreService;

use Illuminate\Database\Eloquent\Model;

/**
 * Models from schema: ecofy version 0.1
 * Code generated by TransformTask
 *
 */

class Organization extends Model {

    /**
	 * The database table used by the model.
	 *
	 * @var string
	 */
    protected $table = 'organizations';

    /**
	 * The primary key column name.
	 *
	 * @var string
	 */
	protected $primaryKey = 'sid';

	/**
	 * To disable created_at and updated_at.
	 *
	 * @var boolean
	 */
	public $timestamps = false;


    /**
	 * The field list for mass assignment.
	 *
	 * @var array
	 */
    protected $fillable = array('uuid','domain_sid','domain_id','created_by','created_dt','updated_by','updated_dt','update_counter','lang','owner_sid','parent_sid','role_sid','role_name','id','name','name_lc','category_sid','registration_type','registration_num','inet_domain_name','url','country_cd','province_cd','district','address','postal_code','slogan','summary','description','logo_image_uri','cover_image_uri','found_date','status','num_members','num_comments','num_cheers','params_text');

    /**
     * Validation rules for creation
     *
     * @var array
     */
    private static $validation_rules_create = array(
        'id' => 'required|alpha_dash|min:4',
		'name' => 'required|alpha_dash|min:4',
		'url' => 'url',
		'country_cd' => 'min:2|max:3'
    	);

    /**
     * Validation rules for update
     *
     * @var array
     */
    private static $validation_rules_udpate = array(
        'id' => 'required|alpha_dash|min:4',
		'name' => 'required|alpha_dash|min:4',
		'url' => 'url',
		'country_cd' => 'min:2|max:3'
    	);

    /**
     * Returns the validation object
     */
    public static function validator($fields, $is_create = true)
    {
    	$rules = ($is_create) ? static::$validation_rules_create : static::$validation_rules_update;
        $validator = \Validator::make($fields, $rules);

        return $validator;
    }

    public function users()
    {
        return $this->hasMany('Users');
    }
}
